basePath: /
definitions:
  auth.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  auth.ReqLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  main.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample Echo server with user management endpoints.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Echo API
  version: "1.0"
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with name, age, and address
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Endpoint create a new user
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user by ID
      tags:
      - users
  /login:
    post:
      consumes:
      - application/json
      description: Generate access token and refresh token for user login
      parameters:
      - description: ReqLogin object
        in: body
        name: req_login
        required: true
        schema:
          $ref: '#/definitions/auth.ReqLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Generate JWT
      tags:
      - auth
  /refresh_token:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh Access Token
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
